version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20

  pre_build:
    commands:
      # Verificar si hay cambios relevantes en shared-ts
      - |
        bash -lc "set -euo pipefail
        echo '[INFO] Verificando cambios en shared-ts...'
        
        # Calcular hash del código actual de shared-ts
        CURRENT_HASH=\$(find \"$CODEBUILD_SRC_DIR/packages/shared-ts\" -type f -name '*.ts' -o -name '*.js' -o -name '*.json' -o -name '*.prisma' | sort | xargs cat | sha256sum | cut -d' ' -f1)
        echo \"[INFO] Hash actual del código: \$CURRENT_HASH\"
        
        # Verificar si existe el layer anterior en S3
        if aws s3 ls \"s3://\$CODE_BUCKET/shared-ts-layer.zip\" >/dev/null 2>&1; then
          # Descargar y extraer el hash del build anterior
          aws s3 cp \"s3://\$CODE_BUCKET/shared-ts-layer.zip\" /tmp/previous-layer.zip
          mkdir -p /tmp/previous-layer
          cd /tmp/previous-layer
          unzip -q ../previous-layer.zip
          
          # Leer el hash del build anterior
          if [ -f 'build-hash.txt' ]; then
            PREVIOUS_HASH=\$(cat build-hash.txt)
            echo \"[INFO] Hash del build anterior: \$PREVIOUS_HASH\"
            
            if [ \"\$CURRENT_HASH\" = \"\$PREVIOUS_HASH\" ]; then
              echo '[INFO] No hay cambios en shared-ts. Saltando el build...'
              echo '[INFO] Para forzar el build, modifica archivos en packages/shared-ts/'
              echo 'SKIP_BUILD=true' > /tmp/skip_build.flag
              set +e
              exit 0
            else
              echo '[INFO] Cambios detectados en shared-ts. Continuando con el build...'
            fi
          else
            echo '[INFO] No se encontró hash anterior. Continuando con el build...'
          fi
        else
          echo '[INFO] No existe layer anterior. Continuando con el build...'
        fi"
      - |
        bash -lc "set -euo pipefail
        # Verificar si se debe saltar el build
        if [ -f '/tmp/skip_build.flag' ]; then
          echo '[INFO] Build saltado - no hay cambios relevantes en shared-ts'
          exit 0
        fi
        test -d \"$CODEBUILD_SRC_DIR/packages/shared-ts\" || { echo 'shared-ts not found'; exit 2; }
        cd \"$CODEBUILD_SRC_DIR/packages/shared-ts\"
        npm ci
        DATABASE_URL=\"\${DATABASE_URL:-postgresql://user:pass@localhost:5432/postgres?schema=public}\" npx -y prisma@5.22.0 generate
        npm run build
        npm prune --omit=dev
        mkdir -p /tmp/layer/nodejs
        cp -a dist /tmp/layer/nodejs/
        cp package.json /tmp/layer/nodejs/
        if [ -d \"$CODEBUILD_SRC_DIR/node_modules\" ]; then
          mkdir -p /tmp/layer/nodejs/node_modules
          cp -a \"$CODEBUILD_SRC_DIR/node_modules/.\" /tmp/layer/nodejs/node_modules/
        else
          echo 'root node_modules not found'
          exit 2
        fi
        
        # Guardar hash del build actual para futuras comparaciones
        CURRENT_HASH=\$(find \"$CODEBUILD_SRC_DIR/packages/shared-ts\" -type f -name '*.ts' -o -name '*.js' -o -name '*.json' -o -name '*.prisma' | sort | xargs cat | sha256sum | cut -d' ' -f1)
        echo \"\$CURRENT_HASH\" > /tmp/layer/build-hash.txt
        echo \"[INFO] Hash del build guardado: \$CURRENT_HASH\""

  build:
    commands:
      - |
        bash -lc "set -euo pipefail
        cd /tmp/layer
        zip -r shared-ts-layer.zip .
        aws s3 cp shared-ts-layer.zip \"s3://$CODE_BUCKET/shared-ts-layer.zip\""
      - |
        bash -lc "set -euo pipefail
        cd \"$CODEBUILD_SRC_DIR\"
        mkdir -p outbox-stream-handler
        if [ -f \"/tmp/layer/nodejs/dist/lambdas/OutboxStreamHandler.js\" ]; then
          cp /tmp/layer/nodejs/dist/lambdas/OutboxStreamHandler.js outbox-stream-handler/
        else
          echo 'const { outboxStreamHandler } = require(\"@lawprotect/shared-ts\");' > outbox-stream-handler/index.js
          echo 'exports.handler = outboxStreamHandler;' >> outbox-stream-handler/index.js
        fi
        cp /tmp/layer/nodejs/package.json outbox-stream-handler/
        (cd outbox-stream-handler && zip -r ../outbox-stream-handler.zip .)
        rm -rf outbox-stream-handler"
      - |
        set +e
        FUNCTION_NAME="${OUTBOX_FUNCTION_NAME}"
        ALIAS_NAME="${OUTBOX_ALIAS_NAME}"
        
        aws s3 cp outbox-stream-handler.zip "s3://$CODE_BUCKET/outbox-stream-handler.zip"
        aws lambda update-function-code --function-name "$FUNCTION_NAME" --s3-bucket "$CODE_BUCKET" --s3-key "outbox-stream-handler.zip"
        aws lambda wait function-updated --function-name "$FUNCTION_NAME"
        aws lambda update-function-configuration --function-name "$FUNCTION_NAME" --layers "$SHARED_TS_LAYER_ARN"
        
        TARGET_VERSION=$(aws lambda publish-version --function-name "$FUNCTION_NAME" --query Version --output text 2>/dev/null)
        if [ -z "$TARGET_VERSION" ] || [ "$TARGET_VERSION" = "null" ]; then
          TIMESTAMP=$(date +%s)
          TARGET_VERSION=$(aws lambda publish-version --function-name "$FUNCTION_NAME" --description "Build-${TIMESTAMP}" --query Version --output text 2>/dev/null)
        fi
        
        CURRENT_VERSION=$(aws lambda get-alias --function-name "$FUNCTION_NAME" --name "$ALIAS_NAME" --query FunctionVersion --output text 2>/dev/null)
        if [ -z "$CURRENT_VERSION" ] || [ "$CURRENT_VERSION" = "null" ] || [ "$CURRENT_VERSION" = "\$LATEST" ]; then
          aws lambda create-alias --function-name "$FUNCTION_NAME" --name "$ALIAS_NAME" --function-version "$TARGET_VERSION"
          CURRENT_VERSION="$TARGET_VERSION"
        fi
        
        CURRENT_VERSION_INT=${CURRENT_VERSION:-1}
        TARGET_VERSION_INT=${TARGET_VERSION:-1}
        printf "%s\n" \
          "version: 0.0" \
          "Resources:" \
          "  - OutboxHandler:" \
          "      Type: AWS::Lambda::Function" \
          "      Properties:" \
          "        Name: \"$FUNCTION_NAME\"" \
          "        Alias: \"$ALIAS_NAME\"" \
          "        CurrentVersion: $CURRENT_VERSION_INT" \
          "        TargetVersion: $TARGET_VERSION_INT" \
          > "$CODEBUILD_SRC_DIR/appspec.yml"
        set -e

artifacts:
  files:
    - 'outbox-stream-handler.zip'
    - 'appspec.yml'
  discard-paths: yes
