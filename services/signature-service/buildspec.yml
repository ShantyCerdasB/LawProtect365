version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - 'bash -lc "set -euo pipefail; echo Using Node: $(node -v); echo Using npm: $(npm -v)"'

  pre_build:
    commands:
      - echo ">>> Construyendo layer local de @lawprotect/shared-ts (para tests)..."
      - >
        bash -lc '
        set -euo pipefail;
        cd "$CODEBUILD_SRC_DIR/packages/shared-ts";
        npm ci;
        DATABASE_URL="${DATABASE_URL:-postgresql://user:pass@localhost:5432/postgres?schema=public}" npx -y prisma@5.22.0 generate;
        npm run build;
        npm prune --omit=dev;
        mkdir -p /tmp/layer/nodejs;
        cp -a dist /tmp/layer/nodejs/;
        cp package.json /tmp/layer/nodejs/;
        if [ -d "$CODEBUILD_SRC_DIR/node_modules" ]; then
          mkdir -p /tmp/layer/nodejs/node_modules;
          cp -a "$CODEBUILD_SRC_DIR/node_modules/." /tmp/layer/nodejs/node_modules/;
        else
          echo "root node_modules not found"; exit 2;
        fi
        '
      - echo ">>> Instalando dependencias de signature-service..."
      - >
        bash -lc '
        set -euo pipefail;
        cd "$CODEBUILD_SRC_DIR/services/signature-service";
        npm ci;
        '
      - echo ">>> Configurando NODE_PATH para usar el layer durante tests..."
      - >
        bash -lc '
        set -euo pipefail;
        cd "$CODEBUILD_SRC_DIR/services/signature-service";
        export NODE_PATH="/tmp/layer/nodejs:/tmp/layer/nodejs/node_modules:$CODEBUILD_SRC_DIR/node_modules:$(npm root)";
        node -e "require(\"module\").Module._initPaths()";
        rm -rf node_modules/@lawprotect/shared-ts || true;
        ls -la /tmp/layer/nodejs || true;
        ls -la /tmp/layer/nodejs/node_modules/@prisma || true;
        ls -la /tmp/layer/nodejs/node_modules/@prisma/client || true;
        node -e "console.log(require.resolve(\"@lawprotect/shared-ts\")?\"resolve OK\":\"resolve FAIL\")";
        '

  build:
    commands:
      - echo ">>> Ejecutando tests unitarios..."
      - >
        bash -lc '
        set -euo pipefail
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        export NODE_PATH="/tmp/layer/nodejs:/tmp/layer/nodejs/node_modules:$CODEBUILD_SRC_DIR/node_modules:$(npm root)"
        node -e "require(\"module\").Module._initPaths()"
        npm run test:unit:coverage
        '
      - echo ">>> Compilando TypeScript..."
      - >
        bash -lc '
        set -euo pipefail
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        npm run build
        npm prune --omit=dev
        rm -rf node_modules/@lawprotect/shared-ts || true
        '
      - echo ">>> Empaquetando handlers..."
      - >
        bash -lc '
        set -euo pipefail
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        handlers=(create-envelope get-envelope send-envelope sign-document decline-signer share-document send-notification get-audit-trail get-envelopes-by-user update-envelope cancel-envelope download-document)
        for handler in "${handlers[@]}"; do
          echo "Packaging sign-$handler.zip"
          mkdir -p "temp-$handler"
          cp -a "dist/handlers/$handler/." "temp-$handler/"
          cp package.json "temp-$handler/"
          (cd "temp-$handler" && zip -r "../sign-$handler.zip" .)
          rm -rf "temp-$handler"
        done
        '

artifacts:
  files:
    - 'services/signature-service/sign-*.zip'
  discard-paths: yes
