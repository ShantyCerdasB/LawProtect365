version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] Node: $(node -v)"
          echo "[INFO] npm:  $(npm -v)"
        '

  pre_build:
    commands:
      # 1) Construir shared-ts y generar Prisma allí
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] build shared-ts"
          cd "$CODEBUILD_SRC_DIR/packages/shared-ts"
          npm ci
          DATABASE_URL="${DATABASE_URL:-postgresql://user:pass@localhost:5432/postgres?schema=public}" npx -y prisma@5.22.0 generate
          npm run build
          npm prune --omit=dev
          mkdir -p /tmp/layer/nodejs
          cp -a dist /tmp/layer/nodejs/
          cp package.json /tmp/layer/nodejs/
          if [ -d "$CODEBUILD_SRC_DIR/node_modules" ]; then
            mkdir -p /tmp/layer/nodejs/node_modules
            cp -a "$CODEBUILD_SRC_DIR/node_modules/." /tmp/layer/nodejs/node_modules/
          fi
        '

      # 2) Instalar deps del servicio (SIN prisma generate aquí)
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] deps en signature-service"
          cd "$CODEBUILD_SRC_DIR/services/signature-service"
          npm ci
        '

      # 3) Configurar NODE_PATH para que los tests usen el layer + root node_modules
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] configurar NODE_PATH para tests"
          cd "$CODEBUILD_SRC_DIR/services/signature-service"
          export NODE_PATH="/tmp/layer/nodejs:/tmp/layer/nodejs/node_modules:$CODEBUILD_SRC_DIR/node_modules:$(npm root)"
          node -e "require(\"module\").Module._initPaths()"
          rm -rf node_modules/@lawprotect/shared-ts || true
          node -e "console.log(require.resolve(\"@prisma/client\") ? \"@prisma/client OK\" : \"@prisma/client NO\")"
          node -e "console.log(require.resolve(\"@lawprotect/shared-ts\") ? \"shared-ts OK\" : \"shared-ts NO\")"
        '

  build:
    commands:
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] tests unitarios"
          cd "$CODEBUILD_SRC_DIR/services/signature-service"
          export NODE_PATH="/tmp/layer/nodejs:/tmp/layer/nodejs/node_modules:$CODEBUILD_SRC_DIR/node_modules:$(npm root)"
          node -e "require(\"module\").Module._initPaths()"
          npm run test:unit:coverage
        '
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] build TS y prune"
          cd "$CODEBUILD_SRC_DIR/services/signature-service"
          npm run build
          npm prune --omit=dev
          rm -rf node_modules/@lawprotect/shared-ts || true
        '
      - |
        bash -lc '
          set -euo pipefail
          echo "[INFO] empaquetar handlers"
          cd "$CODEBUILD_SRC_DIR/services/signature-service"
          handlers=(create-envelope get-envelope send-envelope sign-document decline-signer share-document send-notification get-audit-trail get-envelopes-by-user update-envelope cancel-envelope download-document)
          for h in "${handlers[@]}"; do
            echo "Empaquetando sign-$h.zip"
            mkdir -p "temp-$h"
            cp -a "dist/handlers/$h/." "temp-$h/"
            cp package.json "temp-$h/"
            (cd "temp-$h" && zip -r "../sign-$h.zip" .)
            rm -rf "temp-$h"
          done
        '

artifacts:
  files:
    - services/signature-service/sign-*.zip
  discard-paths: yes
