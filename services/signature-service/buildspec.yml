version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20

  pre_build:
    commands:
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Building packages/shared-ts"
        cd "$CODEBUILD_SRC_DIR/packages/shared-ts"
        npm ci
        export DATABASE_URL="${DATABASE_URL:-postgresql://user:pass@localhost:5432/postgres?schema=public}"
        npm run prisma:generate
        npm run build
        '
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Installing deps in services/signature-service"
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        npm ci
        '
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Preparing Prisma client"
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        if [ -d "$CODEBUILD_SRC_DIR/packages/shared-ts/prisma" ]; then
          mkdir -p prisma
          cp -r "$CODEBUILD_SRC_DIR/packages/shared-ts/prisma/"* prisma/
        fi
        export DATABASE_URL="${DATABASE_URL:-postgresql://user:pass@localhost:5432/postgres?schema=public}"
        npx -y prisma@5.22.0 generate
        node -e "try{require.resolve(\"@prisma/client\");console.log(\"@prisma/client OK\")}catch(e){process.exit(1)}"
        node -e "try{require.resolve(\"@lawprotect/shared-ts\");console.log(\"shared-ts OK\")}catch(e){process.exit(1)}"
        '

  build:
    commands:
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Tests"
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        export DATABASE_URL="${DATABASE_URL:-postgresql://user:pass@localhost:5432/postgres?schema=public}"
        npm run test:unit:coverage
        '
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Build + prune"
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        npm run build
        npm prune --omit=dev
        rm -rf node_modules/@lawprotect/shared-ts || true
        '
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Package handlers"
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        
        # Handler mapping
        handlers=(
          "create-envelope:dist/src/handlers/envelopes/CreateEnvelopeHandler.js"
          "get-envelope:dist/src/handlers/envelopes/GetEnvelopeHandler.js"
          "send-envelope:dist/src/handlers/envelopes/SendEnvelopeHandler.js"
          "sign-document:dist/src/handlers/signing/SignDocumentHandler.js"
          "decline-signer:dist/src/handlers/signing/DeclineSignerHandler.js"
          "share-document:dist/src/handlers/signing/ShareDocumentViewHandler.js"
          "send-notification:dist/src/handlers/notifications/SendNotificationHandler.js"
          "get-audit-trail:dist/src/handlers/audit/GetAuditTrailHandler.js"
          "get-envelopes-by-user:dist/src/handlers/envelopes/GetEnvelopesByUserHandler.js"
          "update-envelope:dist/src/handlers/envelopes/UpdateEnvelopeHandler.js"
          "cancel-envelope:dist/src/handlers/envelopes/CancelEnvelopeHandler.js"
          "download-document:dist/src/handlers/envelopes/DownloadDocumentHandler.js"
        )
        
        for handler in "${handlers[@]}"; do
          name="${handler%%:*}"
          src="${handler##*:}"
          [ -f "$src" ] || { echo "Missing handler $src"; exit 1; }
          work="pkg-$name"
          rm -rf "$work"; mkdir -p "$work"
          cp "$src" package.json "$work/"
          (cd "$work" && zip -qr "../sign-$name.zip" .)
          rm -rf "$work"
        done
        '
      - |
        bash -lc '
        set -euo pipefail
        echo "[INFO] Update Lambda functions directly + create basic appspec.yml"
        cd "$CODEBUILD_SRC_DIR/services/signature-service"
        
        # Update each Lambda function with its corresponding zip
        handlers=(
          "create-envelope:lawprotect365-sign-service-create-envelope-stg"
          "get-envelope:lawprotect365-sign-service-get-envelope-stg"
          "send-envelope:lawprotect365-sign-service-send-envelope-stg"
          "sign-document:lawprotect365-sign-service-sign-document-stg"
          "get-envelopes-by-user:lawprotect365-sign-service-get-envelopes-by-user-stg"
          "update-envelope:lawprotect365-sign-service-update-envelope-stg"
          "cancel-envelope:lawprotect365-sign-service-cancel-envelope-stg"
          "download-document:lawprotect365-sign-service-download-document-stg"
          "share-document:lawprotect365-sign-service-share-document-stg"
          "decline-signer:lawprotect365-sign-service-decline-signer-stg"
          "send-notification:lawprotect365-sign-service-send-notification-stg"
          "get-audit-trail:lawprotect365-sign-service-get-audit-trail-stg"
        )
        
        for handler in "${handlers[@]}"; do
          name="${handler%%:*}"
          function_name="${handler##*:}"
          zip_file="sign-${name}.zip"
          
          if [ -f "$zip_file" ]; then
            echo "[INFO] Updating Lambda function: $function_name"
            aws lambda update-function-code \
              --function-name "$function_name" \
              --zip-file "fileb://$zip_file" \
              --region us-east-1 || echo "Warning: Failed to update $function_name"
          else
            echo "Warning: Zip file $zip_file not found"
          fi
        done
        
        # Create a dummy appspec.yml for CodeDeploy (functions already updated directl)
        echo "[INFO] Creating dummy appspec.yml for CodeDeploy compatibility"
        echo "version: 0.0" > appspec.yml
        echo "Resources:" >> appspec.yml
        echo "  - DummyFunction:" >> appspec.yml
        echo "      Type: AWS::Lambda::Function" >> appspec.yml
        echo "      Properties:" >> appspec.yml
        echo "        Name: lawprotect365-sign-service-create-envelope-stg" >> appspec.yml
        echo "        Alias: live" >> appspec.yml
        echo "        CurrentVersion: 1" >> appspec.yml
        echo "        TargetVersion: 1" >> appspec.yml
        '

artifacts:
  files:
    - services/signature-service/sign-*.zip
    - services/signature-service/appspec.yml
  discard-paths: yes
