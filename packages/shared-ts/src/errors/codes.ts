/**
 * Canonical error codes shared across services.
 * These constants cover platform-level concerns; service-specific codes
 * should be declared within each microservice.
 */
export const ErrorCodes = {
  // AuthN/Z
  AUTH_UNAUTHORIZED: "AUTH_UNAUTHORIZED",
  AUTH_FORBIDDEN: "AUTH_FORBIDDEN",

  // 4xx
  COMMON_BAD_REQUEST: "COMMON_BAD_REQUEST",
  COMMON_NOT_FOUND: "COMMON_NOT_FOUND",
  COMMON_CONFLICT: "COMMON_CONFLICT",
  COMMON_UNSUPPORTED_MEDIA_TYPE: "COMMON_UNSUPPORTED_MEDIA_TYPE",
  COMMON_UNPROCESSABLE_ENTITY: "COMMON_UNPROCESSABLE_ENTITY",
  COMMON_TOO_MANY_REQUESTS: "COMMON_TOO_MANY_REQUESTS",
  COMMON_PRECONDITION_FAILED: "COMMON_PRECONDITION_FAILED",
  COMMON_PAYLOAD_TOO_LARGE: "COMMON_PAYLOAD_TOO_LARGE",

  // 5xx
  COMMON_INTERNAL_ERROR: "COMMON_INTERNAL_ERROR",
  COMMON_NOT_IMPLEMENTED: "COMMON_NOT_IMPLEMENTED",
  COMMON_DEPENDENCY_UNAVAILABLE: "COMMON_DEPENDENCY_UNAVAILABLE",

  // Invitation & Token errors
  INVITATION_TOKEN_EXPIRED: "INVITATION_TOKEN_EXPIRED",
  INVITATION_TOKEN_INVALID: "INVITATION_TOKEN_INVALID",
  INVITATION_TOKEN_ALREADY_USED: "INVITATION_TOKEN_ALREADY_USED",
  INVITATION_NOT_FOUND: "INVITATION_NOT_FOUND",
  CONSENT_NOT_RECORDED: "CONSENT_NOT_RECORDED",
  DOCUMENT_ACCESS_DENIED: "DOCUMENT_ACCESS_DENIED",
  
  // Pagination errors
  PAGINATION_LIMIT_REQUIRED: "PAGINATION_LIMIT_REQUIRED",
  
  // S3 Storage errors
  S3_BUCKET_NOT_ALLOWED: "S3_BUCKET_NOT_ALLOWED",
  S3_KEY_INVALID_FORMAT: "S3_KEY_INVALID_FORMAT",
  S3_KEY_PREFIX_VIOLATION: "S3_KEY_PREFIX_VIOLATION",
  S3_FILE_EXTENSION_NOT_ALLOWED: "S3_FILE_EXTENSION_NOT_ALLOWED",
  S3_KEY_LENGTH_VIOLATION: "S3_KEY_LENGTH_VIOLATION",
  S3_KEY_CHARACTERS_INVALID: "S3_KEY_CHARACTERS_INVALID",
  S3_OPERATION_INVALID: "S3_OPERATION_INVALID",
  S3_EXPIRATION_TIME_INVALID: "S3_EXPIRATION_TIME_INVALID",
  S3_REQUEST_VALIDATION_FAILED: "S3_REQUEST_VALIDATION_FAILED",
  S3_DOCUMENT_CONTENT_REQUIRED: "S3_DOCUMENT_CONTENT_REQUIRED",
  S3_CONTENT_TYPE_INVALID: "S3_CONTENT_TYPE_INVALID",
  S3_FILE_SIZE_EXCEEDED: "S3_FILE_SIZE_EXCEEDED",
  S3_DOCUMENT_KEY_REQUIRED: "S3_DOCUMENT_KEY_REQUIRED",
  S3_ENVELOPE_ID_REQUIRED: "S3_ENVELOPE_ID_REQUIRED",
  S3_SIGNER_ID_REQUIRED: "S3_SIGNER_ID_REQUIRED",
  S3_METADATA_SIZE_MISMATCH: "S3_METADATA_SIZE_MISMATCH"} as const;

/** Union of built-in shared error code strings. */
export type ErrorCode = keyof typeof ErrorCodes;

/**
 * Checks whether a code is one of the shared error codes.
 *
 * @param code Candidate error code.
 * @returns True if the code belongs to the shared catalog.
 */
export const isSharedErrorCode = (code: string): code is ErrorCode =>
  code in ErrorCodes;
